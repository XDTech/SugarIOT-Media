spring.application.name=media
server.port=8899
server.ip=192.168.110.220
spring.upload.path=/Users/tobin/other/
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/media
spring.datasource.username=postgres
spring.datasource.password=postgres_pwd
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=400000
spring.datasource.hikari.maximum-pool-size=60
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.max-lifetime=500000
spring.datasource.hikari.connection-timeout=30000
# [none] This is the default for MySQL, no change to the database structure.
# [update] Hibernate changes the database according to the given Entity structures.
# [create] Creates the database every time, but don\u00E2\u0080\u0099t drop it when close.
# [create-drop] Creates the database then drops it when the SessionFactory closes.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.open-in-view=true
# spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
############## Sa-Token \u914D\u7F6E (\u6587\u6863: https://sa-token.cc) ##############
# token \u540D\u79F0\uFF08\u540C\u65F6\u4E5F\u662F cookie \u540D\u79F0\uFF09
sa-token.token-name=Sugar-Media
# token \u6709\u6548\u671F\uFF08\u5355\u4F4D\uFF1A\u79D2\uFF09 \u9ED8\u8BA430\u5929\uFF0C-1 \u4EE3\u8868\u6C38\u4E45\u6709\u6548
sa-token.timeout=2592000
# token \u6700\u4F4E\u6D3B\u8DC3\u9891\u7387\uFF08\u5355\u4F4D\uFF1A\u79D2\uFF09\uFF0C\u5982\u679C token \u8D85\u8FC7\u6B64\u65F6\u95F4\u6CA1\u6709\u8BBF\u95EE\u7CFB\u7EDF\u5C31\u4F1A\u88AB\u51BB\u7ED3\uFF0C\u9ED8\u8BA4-1 \u4EE3\u8868\u4E0D\u9650\u5236\uFF0C\u6C38\u4E0D\u51BB\u7ED3
sa-token.active-timeout=-1
# \u662F\u5426\u5141\u8BB8\u540C\u4E00\u8D26\u53F7\u591A\u5730\u540C\u65F6\u767B\u5F55 \uFF08\u4E3A true \u65F6\u5141\u8BB8\u4E00\u8D77\u767B\u5F55, \u4E3A false \u65F6\u65B0\u767B\u5F55\u6324\u6389\u65E7\u767B\u5F55\uFF09
sa-token.is-concurrent=true
# \u5728\u591A\u4EBA\u767B\u5F55\u540C\u4E00\u8D26\u53F7\u65F6\uFF0C\u662F\u5426\u5171\u7528\u4E00\u4E2A token \uFF08\u4E3A true \u65F6\u6240\u6709\u767B\u5F55\u5171\u7528\u4E00\u4E2A token, \u4E3A false \u65F6\u6BCF\u6B21\u767B\u5F55\u65B0\u5EFA\u4E00\u4E2A token\uFF09
sa-token.is-share=true
# token \u98CE\u683C\uFF08\u9ED8\u8BA4\u53EF\u53D6\u503C\uFF1Auuid\u3001simple-uuid\u3001random-32\u3001random-64\u3001random-128\u3001tik\uFF09
sa-token.token-style=tik
# \u662F\u5426\u8F93\u51FA\u64CD\u4F5C\u65E5\u5FD7
sa-token.is-log=true
#\u662F\u5426\u5728\u521D\u59CB\u5316\u914D\u7F6E\u65F6\u6253\u5370\u7248\u672C\u5B57\u7B26\u753B
sa-token.isPrint=false
##### redis config
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.password=
#### sip \u914D\u7F6E
#\u7AEF\u53E3
sip.port=5060
# \u7F51\u5361\u4FE1\u606F \u7528\u4E8E\u76D1\u542C\u54EA\u4E2A\u7F51\u5361
sip.ip=192.168.110.220
sip.remoteIp=192.168.110.220
# password
sip.pwd=smile100
sip.domain=44020000000
sip.id=44020000002000000001
sip.expires=3600
# \u9488\u5BF9\u76F4\u64AD\u7684\u914D\u7F6E
# \u662F\u5426\u81EA\u52A8\u5F55\u5236 true \u5F00\u542F false \u5173\u95ED
live.enableMp4=true
# \u65E0\u4EBA\u89C2\u770B\u65F6\u5019\u7684\u5904\u7406 false(\u4E0D\u5173\u95ED\u6D41)/true\uFF08\u5173\u95ED\u6D41\uFF09
live.autoClose=true

